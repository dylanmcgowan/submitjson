/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v1/endpoints/{endpointSlug}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Submit your data to an endpoint
     * @description Submit your data bb
     */
    post: operations['submit']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    SubmissionInput: {
      /**
       * @example {
       *       "name": "Test Testerson",
       *       "email": "test@testerson.com",
       *       "message": "Greetings"
       *     }
       */
      data: {
        [key: string]: unknown
      }
      options?: {
        /** @example false */
        emailNotification?: boolean
        /** @example yo@yoerson.com */
        emailReplyTo?: string
        /**
         * @example raw
         * @enum {string}
         */
        submissionFormat?: 'raw' | 'pretty'
        /** @example yo@yoerson.com */
        submissionRecipient?: string
        /**
         * @example ping
         * @enum {string}
         */
        submissionSound?: 'none' | 'beep' | 'blip' | 'block' | 'coin' | 'ding' | 'dink' | 'honk' | 'jump' | 'ping' | 'pong' | 'snare'
      }
    }
    Submission: {
      /** Format: date-time */
      createdAt?: string
      /**
       * @example {
       *       "name": "Test Testerson",
       *       "email": "test@testerson.com",
       *       "message": "Greetings"
       *     }
       */
      data?: Record<string, never>
      /** @example false */
      emailNotification?: boolean
      /** @example yo@yoerson.com */
      emailReplyTo?: string
      emailStatus?: null | string
      /** @example 12345 */
      endpointId?: number
      /** @example Test Contact Form */
      endpointName?: string
      /** @example XxJqpisK8 */
      endpointSlug?: string
      /** Format: date-time */
      seenAt?: string | null
      /** @enum {string} */
      submissionFormat?: 'raw' | 'pretty'
      /** @example xxxx-xxxx-xxxx-xxx */
      submissionId?: string
      /** @example yo@yoerson.com */
      submissionRecipient?: string
      /**
       * @example ping
       * @enum {string}
       */
      submissionSound?: 'none' | 'ping'
      /** @example 12345 */
      userId?: number
    }
    ErrorResponse: {
      /** @example ðŸ™ˆ */
      message?: string
      /** @example 400 */
      statusCode?: unknown
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  submit: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description the slug of the endpoint */
        endpointSlug: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SubmissionInput']
      }
    }
    responses: {
      /** @description Returns the new submission */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Submission']
        }
      }
      /** @description Endpoint is disabled */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Submission limit reached */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Endpoint not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Invalid request body */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
